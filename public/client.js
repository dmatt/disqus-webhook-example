// client-side js

// as webhooks payloads come in from the server side via Socket.IO, we add them
// to this `payloads` array. Vue.js takes care of updating the UI to show these
// payloads in the console below the video.
window.payloads = [];
var socket = io();
socket.on('event', function(payload){
  // Only display webhooks generated by the current viewer on this page
  // If we didn't do this check, all events for the account used in this demo
  // would get logged to the demo page for everybody looking at it at that time.
  if (payload.visitor.id == Wistia.visitorKey.value()) {
    payloads.unshift(JSON.stringify(payload, null, 2))
  }
});


// Via https://www.metachris.com/2017/02/vuejs-syntax-highlighting-with-highlightjs/
Vue.directive('highlightjs', {
  deep: true,
  bind: function (el, binding) {
    // on first bind, highlight all targets
    let targets = el.querySelectorAll('code')
    targets.forEach((target) => {
      // if a value is directly assigned to the directive, use this
      // instead of the element content.
      if (binding.value) {
        target.textContent = binding.value
      }
      hljs.highlightBlock(target)
    })
  },
  componentUpdated: function (el, binding) {
    // after an update, re-fill the content and then highlight
    let targets = el.querySelectorAll('code')
    targets.forEach((target) => {
      if (binding.value) {
        target.textContent = binding.value
        hljs.highlightBlock(target)
      }
    })
  }
})

// This is where we tell Vue.js which data to display in the UI.
// Vue takes care of updating the UI as that data changes. Thanks, Vue!
var app = new Vue({
  el: '#webhooks_log',
  data: {
    payloads: payloads
  }
})